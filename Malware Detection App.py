#!/usr/bin/env python
# coding: utf-8

# In[4]:


import streamlit as st
import pickle
import warnings
import numpy as np
import pandas as pd
warnings.filterwarnings('ignore')

model=pickle.load(open('malware_detection.pkl','rb'))

def predict_malware(ar):
    #input=np.array([[oxygen,humidity,temperature]]).astype(np.float64)
    prediction=model.predict(ar)
    return int(prediction)

def main():
    #st.title("Malware Detection using Machine Learning")
    html_malware_detection = """
    <div style="background-color:#000000 ;padding:10px">
    <h1 style="color:white;text-align:center;"> Malware Detection App </h1>
    <br><br>
    </div>
    """
    st.markdown(html_malware_detection, unsafe_allow_html=True)
    
    #ar=np.array([[6,3,262144,268435456,8450,3,3,11,31744,6,3,320,1.994310585]])
    
    uploaded_file = st.file_uploader("Choose an executable file")
    if uploaded_file is not None:
        dataframe = pd.read_csv(uploaded_file)
        ar=dataframe[[#'MajorSubsystemVersion',
          #'ImageBase',
          #'MinorOperatingSystemVersion',
          #'Subsystem',
          'Characteristics',
          #'MinorSubsystemVersion',
          #'MajorLinkerVersion',
          'SizeOfStackReserve',
          'SectionMinEntropy',
          #'SectionMaxChar',
          #'MajorImageVersion',
          'DllCharacteristics',
          #'MinorImageVersion',
          #'SizeOfInitializedData',
        'SizeOfHeaders'
        #'SizeOfImage'
         ]]
    
    malware_html="""  
      <div style="background-color:#FFCCCB;padding:20px >
       <h2 style="font-color:white ;text-align:center;"> BEWARE! The executable file contains malware!</h2>
       </div>
    """
    benign_html="""  
      <div style="background-color:#90EE90;padding:20px >
       <h2 style="font-color:white ;text-align:center;"> Relax, the executable file is safe!</h2>
       </div>
    """
    if st.button("Check"):
        output=predict_malware(ar)
        #st.success('Prediction completed')

        if (output==0):
            st.markdown(benign_html,unsafe_allow_html=True)
        else:
            st.markdown(malware_html,unsafe_allow_html=True)

if __name__=='__main__':
    main()


# In[ ]:




